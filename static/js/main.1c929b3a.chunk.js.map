{"version":3,"sources":["components/SearchBar.js","components/Watched.js","components/Movie.js","components/MovieList.js","components/MyList.js","apis/openMovieDatabase.js","apis/apikey.js","components/App.js","index.js"],"names":["SearchBar","props","onSubmit","e","onClickSearchBarHandler","htmlFor","type","id","value","stateValue","onChange","handleSearchBarChange","Watched","renderText","movie","watched","name","checked","onCheckBoxChangeHandler","imdbID","Movie","className","Title","Year","Type","onClick","onClickMovieHandler","style","backgroundColor","MovieList","movieList","map","checkIfMovieIsInMyList","key","MyList","myList","axios","create","baseURL","apikey","App","state","addMovieHandler","timeAdded","Date","push","setState","localStorage","setItem","JSON","stringify","updateMovieHandler","removeMovieHandler","filter","movie_arg","added","forEach","movie_myList","preventDefault","phrase","console","log","openMovieDatabase","get","then","response","data","Search","catch","error","target","imdbID_arg","helperState","find","local","getItem","localJSON","parse","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c929b3a.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBar = (props) => {\n  return (\n    <div>\n      <form onSubmit={(e) => props.onClickSearchBarHandler(e)}>\n        <label htmlFor=\"movie-input\">Unesi ime filma: </label>\n        <input\n          type=\"text\"\n          id=\"movie-input\"\n          value={props.stateValue}\n          onChange={(e) => props.handleSearchBarChange(e)}\n        ></input>\n        <button>Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\n\nconst Watched = (props) => {\n  const renderText = props.movie.watched ? 'WATCHED' : 'NOT WATCHED';\n\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        name=\"nam\"\n        value={props.movie.watched}\n        checked={props.movie.watched}\n        onChange={() => props.onCheckBoxChangeHandler(props.movie.imdbID)}\n      />\n      {renderText}\n      <br></br>\n    </div>\n  );\n};\n\nexport default Watched;\n","import React from 'react';\nimport Watched from './Watched';\n\nconst Movie = (props) => {\n  const renderButtonAndWatchList = (type) => {\n    if (type === 'movieList') {\n      return (\n        <button onClick={() => props.onClickMovieHandler(props.movie, 'movieList')}>\n          Add TO WATCHLIST\n        </button>\n      );\n    } else if (type === 'myList') {\n      return (\n        <>\n          <Watched\n            movie={props.movie}\n            onCheckBoxChangeHandler={props.onCheckBoxChangeHandler}\n          />\n          <button onClick={() => props.onClickMovieHandler(props.movie, 'myList')}>\n            REMOVE FROM WATCHLIST\n          </button>\n        </>\n      );\n    } else if (type === 'movieListAdded') {\n      return <button style={{ backgroundColor: 'red' }}>STORED IN WATCHLIST</button>;\n    }\n  };\n\n  return (\n    <div className=\"movie-container\">\n      <h4 className=\"movie-detail\">Title: {props.movie.Title}</h4>\n      <p className=\"movie-detail\">Year: {props.movie.Year}</p>\n      <p className=\"movie-detail\">Type: {props.movie.Type}</p>\n      {/* <p className=\"movie-detail\">imdbID: {props.movie.imdbID}</p> */}\n      {renderButtonAndWatchList(props.type)}\n    </div>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\nimport Movie from './Movie';\n\nconst MovieList = (props) => {\n  return (\n    <>\n      <h1>MOVIE LIST</h1>\n      <ul>\n        {props.movieList.map((movie) => {\n          const movieInMyList = props.checkIfMovieIsInMyList(movie.imdbID);\n          const type = movieInMyList ? 'movieListAdded' : 'movieList';\n\n          return (\n            <li key={movie.imdbID}>\n              <Movie\n                type={type}\n                movie={movie}\n                onClickMovieHandler={props.onClickMovieHandler}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieList;\n","import React from 'react';\nimport Movie from './Movie';\n\nconst MyList = (props) => {\n  return (\n    <>\n      <h1>WATCHLIST</h1>\n      <ul>\n        {props.myList.map((movie) => {\n          return (\n            <li key={movie.imdbID}>\n              <Movie\n                type=\"myList\"\n                movie={movie}\n                onClickMovieHandler={props.onClickMovieHandler}\n                onCheckBoxChangeHandler={props.onCheckBoxChangeHandler}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default MyList;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://www.omdbapi.com',\n});\n\n//http://www.omdbapi.com/?apikey=320de091/&s=superman\n","const apikey = '320de091';\n\nexport default apikey;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport MyList from './MyList';\nimport openMovieDatabase from '../apis/openMovieDatabase';\nimport apikey from '../apis/apikey';\n\nclass App extends Component {\n  state = {\n    value: 'tree',\n    movieList: [],\n    myList: [],\n  };\n\n  componentDidMount() {\n    const local = localStorage.getItem('myListLocal');\n    if (local) {\n      const localJSON = JSON.parse(local);\n      this.setState({\n        myList: localJSON,\n      });\n    }\n  }\n\n  addMovieHandler = (movie) => {\n    movie.timeAdded = new Date();\n    movie.watched = false;\n    const myList = this.state.myList;\n    myList.push(movie);\n    this.setState({ myList: myList }, () => {\n      localStorage.setItem('myListLocal', JSON.stringify(myList));\n    });\n  };\n\n  updateMovieHandler = () => {\n    const myList = this.state.myList;\n    this.setState({ myList: myList }, () => {\n      localStorage.setItem('myListLocal', JSON.stringify(myList));\n    });\n  };\n\n  removeMovieHandler = (movie) => {\n    let myList = this.state.myList;\n    myList = myList.filter((movie_arg) => movie_arg.imdbID !== movie.imdbID);\n    this.setState({ myList: myList }, () => {\n      localStorage.setItem('myListLocal', JSON.stringify(myList));\n    });\n  };\n\n  onClickMovieHandler = (movie, type) => {\n    if (type === 'movieList') {\n      this.addMovieHandler(movie);\n    } else if (type === 'myList') {\n      this.removeMovieHandler(movie);\n    }\n  };\n\n  checkIfMovieIsInMyList = (imdbID) => {\n    let added = false;\n    this.state.myList.forEach((movie_myList) => {\n      if (imdbID === movie_myList.imdbID) {\n        added = true;\n      }\n    });\n    return added;\n  };\n\n  onClickSearchBarHandler = (e) => {\n    e.preventDefault();\n    const phrase = '?apikey=' + apikey + '&s=' + this.state.value;\n    console.log(apikey);\n    openMovieDatabase\n      .get(phrase)\n      .then((response) => {\n        console.log(response);\n        this.setState({ movieList: response.data.Search });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  handleSearchBarChange = (e) => {\n    e.preventDefault();\n    this.setState({ value: e.target.value });\n  };\n\n  onCheckBoxChangeHandler = (imdbID_arg) => {\n    let helperState = { ...this.state };\n    helperState.myList.find(\n      (movie) => movie.imdbID === imdbID_arg\n    ).watched = !helperState.myList.find((movie) => movie.imdbID === imdbID_arg).watched;\n    this.setState(helperState);\n    this.updateMovieHandler();\n  };\n\n  render() {\n    return (\n      <>\n        <SearchBar\n          onClickSearchBarHandler={this.onClickSearchBarHandler}\n          handleSearchBarChange={this.handleSearchBarChange}\n          stateValue={this.state.value}\n        />\n        <MovieList\n          movieList={this.state.movieList}\n          onClickMovieHandler={this.onClickMovieHandler}\n          checkIfMovieIsInMyList={this.checkIfMovieIsInMyList}\n        />\n        <MyList\n          myList={this.state.myList}\n          onClickMovieHandler={this.onClickMovieHandler}\n          onCheckBoxChangeHandler={this.onCheckBoxChangeHandler}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}